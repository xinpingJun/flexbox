/*
 一个flex容器有主轴和交叉轴两条基准线，一般默认水平方向为主轴（横坐标），垂直方向为交叉轴（纵坐标），也可以设置垂直方向为主轴，
 容器内的项目沿两条轴排列或对齐。*/

/*以下辅助类应用于弹性盒容器：*/

 /*display*/
.flex {
    display: -webkit-flex!important;
    display: -ms-flexbox!important;
    display: flex!important;
}
/*行内元素也可以使用Flex布局*/
.flex-inline {
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
}
/*设置在容器上的6个属性
flex-direction：决定主轴（X轴）的方向
flex-wrap：换行方式
flex-flow：是flex-direction属性和flex-wrap属性的简写形式；
justify-content：在（x轴）主轴上的对齐方式。
align-items：（Y轴）交叉轴上如何对齐。（纵向对齐）
align-content ：性定义了多根轴线的对齐方式 如果项目只有一根轴线，该属性不起作用。
*/
/*默认方向*/
.flex-row
{
            flex-direction: row;

    -webkit-flex-direction: row;
        -ms-flex-direction: row;
}
/*右端起点*/
.flex-row-reverse
{
            flex-direction: row-reverse;

    -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
}
/*垂直排列 起点上*/
.flex-column
{
            flex-direction: column;

    -webkit-flex-direction: column;
        -ms-flex-direction: column;
}
/*起点下*/
.flex-column-reverse
{
            flex-direction: column-reverse;

    -webkit-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
}
/*换行 第一行在上方*/

.flex-wrap {
    -webkit-flex-wrap: wrap!important;
    -ms-flex-wrap: wrap!important;
    flex-wrap: wrap!important;
}
/*不换行*/
.flex-nowrap {
    -webkit-flex-wrap: nowrap!important;
    -ms-flex-wrap: nowrap!important;
    flex-wrap: nowrap!important;
}
/*两端对齐*/
.space-between {
    -webkit-justify-content: space-between !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
}
/*左对齐（默认）*/
.justify-start {
    -webkit-justify-content: flex-start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
}
/*右对齐*/
.justify-end {
    -webkit-justify-content: flex-end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
}
/*水平居中*/
.flex-center,
.justify-center {
    -webkit-justify-content: center!important;
    -ms-flex-pack: center!important;
    justify-content: center!important;
}
/*如果项目未设置高度或设为auto，将占满整个容器的高度。展开*/
.stretch {
    -webkit-align-items: stretch!important;
    -ms-flex-align: stretch!important;
    -ms-grid-row-align: stretch!important;
    align-items: stretch!important;
}
/*Y轴的起点对齐。*/
.align-start {
    -webkit-align-items: flex-start !important;
    -ms-flex-align: start !important;
    -ms-grid-row-align: flex-start !important;
    align-items: flex-start !important;
}
/*Y轴的终点对齐。*/
.align-end {
    -webkit-align-items: flex-end !important;
    -ms-flex-align: end !important;
    -ms-grid-row-align: flex-end !important;
    align-items: flex-end !important;
}
/*垂直居中*/
.flex-center,
.align-middle {
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center;
}
/*以下辅助类应用于弹性盒子元素：*/
/*
 6个属性设置在项目上
    order:定义项目的排列顺序。数值越小，排列越靠前，默认为0。
    flex-grow:属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。
    flex-shrink:属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
    flex-basis:属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。
    flex:属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选
    align-self:属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。
  */
 /*定义排序 （靠前）*/
.flex-first {
    -webkit-order: -1;
    -ms-flex-order: -1;
    order: -1;
}
/*定义排序（靠后）*/
.flex-last {
    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1;
}
/*与 1 1 auto 相同。*/
.flex-auto {
    -webkit-flex: auto !important;
    -ms-flex: auto !important;
    flex: auto !important;
}
  /*与 0 0 auto 相同。*/
.flex-none {
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
}
/*align-self 属性允许单个项目有与其他项目不一样的对齐方式，*/
/*默认*/
.selft-stretch {
    -webkit-align-self: stretch!important;
    -ms-flex-item-align: stretch!important;
    align-self: stretch!important;
}

/*上*/
.align-self-start {
    -webkit-align-self: flex-start !important;
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
}
/*下*/
.align-self-end {
    -webkit-align-self: flex-end !important;
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
}
/*居中*/
.align-self-middle {
    -webkit-align-self: center!important;
    -ms-flex-item-align: center!important;
    align-self: center!important;
}
